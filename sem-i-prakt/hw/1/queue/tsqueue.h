#include "lstack.h"
#pragma once
typedef LinkedStack Stack;

/// Двустекова опашка
class TwoStackQueue
{
    /**
        Опашката се реализира чрез два стека, които се използват съответно:
        -- push_stack: за добавяне на елементи в края на опашката
        -- pop_stack: за проверка на стойност и премахване на елементи в началото на опашката
    **/
    Stack push_stack, pop_stack;

    /**
        Този метод е служебен; той прехвърля елементи от стека за добавяне в
        стека за премахване с цел те да могат да бъдат достъпвани и премахвани
    **/
    void refill_pop_stack();

public:
    /// Няма нужда от дефиниране на конструктор по подразбиране, такъв за копиране, оператор за присвояване и деструктор
    ///    (няма динамично заделени член-данни)

    /// Селектори

    /// -- Проверява дали опашката е празна
    bool empty() const;
    /// -- Връща първия добавен елемент (ако няма такъв, 0) (de facto е мутатор,
    ///    тъй като извикването на refill_pop_stack променя член-данните)
    int front();

    /// Мутатори

    /// -- Добавя елемент на върха
    void push(int);
    /// -- Премахва елемента на върха и връща true, ако има такъв (ако няма, връща false)
    bool pop();
};
